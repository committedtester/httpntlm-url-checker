const URL = 'http://127.0.0.1/bizanalyserservice/';
var httpntlm = require('httpntlm');
var chai = require('chai');  
var assert = require('chai').assert
var websiteLinks = require('../test/website.json')

var username ='aaron'
var localMachineName ='WOMBAT';
var encryptedLocalMachinePassword = new Buffer([ 43, 62, 12, 170, 200, 47, 245, 211, 105, 27, 138, 39, 153, 115, 76, 208 ]);
var encryptedNetworkPassword = new Buffer([ 21, 248, 36, 209, 102, 180, 83, 108, 76, 153, 246, 164, 249, 74, 105, 215 ]);

describe('Test Admin Panel URL', () => {
    testVariable='Test1';
    var parameters =
                {    
                    url:URL,     
                    username: username,
                    lm_password: encryptedLocalMachinePassword,
                    nt_password: encryptedNetworkPassword,
                    workstation: localMachineName            
                };        
    
                function repeatTest(iteration){                    
                    parameters.url=testData[iteration][1];
                    expStatusCode =testData[iteration][0];

                    it(`${testVariable} :Confirm URL with `+parameters.url + expStatusCode, (done) => 
                    { 
                    console.log("Expected status code "+testData[0]);
                    //console.log(URL+testData[1]);
                  
                    httpntlm.get(parameters,
                        function(err,data) 
                        {
                            if(err) 
                                {console.log(err);
                                }    
                            console.log(data);
                            console.log("Expected Status code is: "+expStatusCode);
                            assert.equal(data.statusCode, expStatusCode,'Status Code does not match');
                            done();
                        })
                        
                    })

                    for (x in websiteLinks)
                    {
                        console.log(x);
                        repeatTest(x);
                    }

                }











                /*
    for (x in websiteLinks)
        {   parameters = parameters;
            testData =websiteLinks[x]; 
            expStatusCode=testData[0];
            parameters.url=URL+testData[1];

            it(`${testVariable} :Confirm URL with `+parameters.url + expStatusCode, (done) => 
            { 
            console.log("Expected status code "+testData[0]);
            //console.log(URL+testData[1]);
          
            httpntlm.get(parameters,
                function(err,data) 
                {
                    if(err) 
                        {console.log(err);
                        }    
                    //console.log(data);
                    console.log(expStatusCode);
                    assert.equal(data.statusCode, expStatusCode,'Status Code does not match');
                    done();
                })
            })

        }
                    */
    })

               






    /*
        for (x in websiteLinks)
        {
            var testData =websiteLinks[x];
            //console.log(testData[0]);
            //console.log(URL+testData[1]);

            expStatusCode=testData[0];
            parameters.url=URL+testData[1];

            

            httpntlm.get(parameters,
                    function(err,data) 
                    {
                        if(err) 
                            {console.log(err);
                            }    
                        //console.log(data);
                        console.log(data.statusCode);
                        assert.equal(data.statusCode, expStatusCode,'Status Code does not match');
                        
                    })
                   
        }       

        //done();



        websiteLinks.forEach(element => {
            expStatusCode =websiteLinks[0];
            console.log("Expected Status Code is: "+expStatusCode);
            //parameter.url = websiteLinks.x[1];

            httpntlm.get(parameters,
                function(err,data) 
                {
                    console.log(data.statusCode);
                    assert.equal(data.statusCode, expStatusCode)
                    done();
                })
        })

    })
})
        */